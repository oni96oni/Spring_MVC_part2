타임리프 - 스프링 통합과 폼
    프로젝트 설정

    타임리프 스프링 통합
        스프링의 SpringEL 문법 통합
        스프링 빈 호출 지원
        ★편리한 폼 관리 추가 속성

    입력 폼 처리
        th:field 사용하면 ? id랑 name, value속성을 자동으로 만들어준다. * 표시는 th:object에서 따온다.
        th:object에 쓸 객체를 넣고 th:field로 속성들을 편하게 사용한다.(id, name, value)

        폼 검증과 관련된 부분에서 위력이 드러난다. 어떻게???

    요구사항 추가

    체크 박스 - 단일 1
        체크 박스 선택하지 않고 폼을 전송하면 open이라는 필드 자체가 서버로 전송되지않는다. 즉 false이런게 안뜨고 null로 가버린다.
        서버에서는 왜 안넘어왔는지 모른다. 서버 구현에 따라서 값이 오지 않는것으로 판단해서 값을 변경하지 않을 수도 있다.

        false가 넘어오면 편한데 왜 on이 넘어오는거야? 체크를 안하면 아예 넘어오질못하니까 on을 넘겨서 false로 인식시킨다.
        on이 넘어오면 false로 바꿔준다.

    체크 박스 - 단일 2
        히든필드 넣어야 했던걸 타임리프에선 간단하게 해결 가능! 어떻게???

        id, value, name 뿐만 아니라 hidden 필드까지 알아서 생성해준다.

        값이 참(체크가 되어있으면)이면 checked 넣어주는것까지 타임리프가 해준다.

    체크 박스 - 멀티
        HashMap은 순서가 보장이 안되어서 순서를 보장해야 할 때는 LinkedHashMap사용

        @ModelAttribute 특별기능
        중복되는 코드들을 모아서 메서드 만든건데 뭐가 특별한가???
        모델에 자동으로 담기게하는것! 모델에 항상 담겨져있는것이 보장된다.

        HTML의 id가 동적으로 만들어진다. label for="id 값"에 지정된 id가 checkbox에서 동적으로 생성된 regions1 .. 에 맞추어 순서대로 입력된다.

    라디오 버튼
        프로퍼티접근법은 getter를 쓴다.
        히든필드가 없다. 선택안하면 null이 날라감 체크 박스와 다르다.
        한번 체크가 되면 무조건 값이 넘어간다.

        모델에 안담고도 타임리프에서 enum바로 접근 가능 그렇지만 모델에서 넘겨주는게 더 깔끔

    셀렉트 박스
        자바 객체 활용 셀렉트박스 사용

        DeliveryCode라는 자바객체 사용 (enum과 비슷) 무슨 차이점???

    정리
        빈 호출 지원
        편리한 폼관리 추가 속성 th:object, field, errors, 등등

        렌더링 id,name,value를 자동으로 만들어준다.

        enum - deliveryCode

