로그인 처리1 - 쿠키, 세션
    로그인 요구사항

    프로젝트 생성
        도메인 - 시스템이 구현해야 하는 핵심 비즈니스 업무
        domain과 web 분리
        web이 노드를 자바로 바꾸어도 도메인은 잘 기능하는 그런것이라 생각했는데 아니다.

    홈 화면

    회원 가입

    로그인 기능

    로그인 처리하기 - 쿠키 사용
        서버에서 쿠키를 한번 만들어서 보내주면 클라이언트가 요청할때마다 쿠키를 같이 넣어서 보낸다. 이걸로 로그인 유지

        영속 쿠키 : 만료날짜 입력, 해당 날짜까지 유지
        세션 쿠키 : 만료날짜 생략, 브라우저 종료시까지 유지

        쿠키 로그인한것 로그아웃할때는 쿠키기간없애주면된다.

        보안상 매우 큰 취약점이 있다. 쿠키 로그인, 로그아웃 방식은

    쿠키와 보안 문제
        쿠키에는 보안문제가 많다.
        클라이언트가 보내는것이기 때문에 위변조가 가능하다. -> ★클라이언트에서 보관되는것은 전부 문제가 발생할 여지가 있다.
        그래서 대응책으로 토큰은 임의의 값을 넣어도 찾을 수 없도록 예상 불가해야해
        그리고 시간 또한 제한되어 있어야 한다.

        대안책으로 서버세션!!

    로그인 처리하기 - 세션 동작 방식
        쿠키값 변조 예방을 위해 예상불가능한 세션id를 사용
        그래도 이 값으로 value를 가져오므로 쿠키를 훔쳐간다면 이전처럼 로그인을 할 수 있는것 아닌가???

    로그인 처리하기 - 세션 직접 만들기

    로그인 처리하기 - 직접 만든 세션 적용
        ★세션이라는것은! 쿠키를 사용하는데 서버에서 데이터를 최대한 다 유지를 하는 방법이다!
        랜덤한 토큰값으로 느슨하게 유지시키는것.

        프로젝트마다 세션 개념을 직접 개발하는 것은 상당히 불편
        그래서 서블릿도 세션 개념을 지원한다.

    로그인 처리하기 - 서블릿 HTTP 세션 사용하기 1
        세션은 대부분의 웹 애플리케이션에 필요하다.
        서블릿은 세션을 위해 HttpSession이라는 기능을 제공하여 지금까지 나온 문제들을 해결!

        request.getSession() : 세션이 있으면 기존 세션 반환, 없으면 신규 세션 생성
        true : 세션이 있으면 기존 세션 반환, 없으면 신규 세션 생성
        false : 세션이 있으면 기존 세션 반환, 없으면 null 반환 (새로운 세션을 생성하지 않는다)
        true가 디폴트값이다

        기본적으로 메모리에 저장되는것

        로그아웃을하고도 브라우저에 쿠키가 남아있는데 어차피 서버에서는 이미 삭제가 되어있기때문에 상관없고 또
        세션이기 때문에 브라우저를 껏다키면 완전히 종료된다.

    로그인 처리하기 - 서블릿 HTTP 세션 사용하기 2
        @SessionAttribute 는 세션을 생성하지 않는다.
        그래서 생성된것을 찾아올때 사용

        맨 처음 로그인하면 jsessionid가 url뒤에 붙는다.
        웹브라우저가 쿠키를 지원하지 않을 때 쿠키대신 url을 통해서 세션을 유지하는 방법도 존재, 하지만 현실성이 없어
        어려워서 타임리프같은 템플릿은 포함해주는 기능이 있긴하다.

        1. url전달방식
        2. 쿠키
        3. 세션
        이런 방법들이 있는것 같다! 로그인을 유지시키는?

        TrackingModes
        즉 url전달방식을 사용안하면 properties에
        server.servlet.session.tracking-modes=cookie 를 넣어주면 된다.

    세션 정보와 타임아웃 설정
        서버 재시작한다음에 http://localhost:8080/session-info
        요청했을때 왜 세션이 있다고 나오는거지??? 로그인을 한다음에야 세션이 생성되어야하는거 아닌가???

    정리
        웹에서 도메인으로 단방향으로 의존관계가 흐르게 되어야한다.

        로그인 실패했을때는 bindingResult에다가 글로벌 오류 추가해줘서 오류가 뜨도록

        쿠키는 보안문제가 많다, 변경될수있고 훔쳐갈수도있다.

        대안은 세션! 서버에서 중요한 정보를 모두 저장

        쿠키에는 UUID 를 넘겨주어서 느슨하게 서버와 연결한다.

