로그인 처리 2 - 필터, 인터셉터
    서블릿 필터 - 소개
        서블릿 - 필터
        스프링 - 인터셉터
        제공하는 기능들이다.

        모든 컨트롤러 로직에 로그인 여부체크를 하기 힘들다! 수정해야하면 다 수정해야하기도 하고 짧아도 실수할 여지가 있다.

        애플리케이션 여러 로직에서 공통으로 관심이 있는것을 공통관심사라고 한다. 여기서는 등록, 수정, 삭제 등등 여러로직에서
        인증에 대해 관심을 가지고있는데 이런걸 공통관심사라고 한다.

        웹과 관련된 공통 관심사는 필터, 인터셉터를 사용하는 것이 좋다. 왜???
        필터와 인터셉터는 HttpServletRequest등을 사용함으로써 HTTP헤더나 url의 정보들을 사용할 수 있어서

        필터 흐름
        클라이언트 -> 필터 -> 서블릿 -> 필터 -> 클라이언트
        HTTP 요청 -> WAS -> 필터 -> 서블릿 -> 컨트롤러

    서블릿 필터 - 요청 로그
        chain.doFilter가 있어야 다음필터가 있으면 필터를 호출 없으면 서블릿을 호출한다.
        이것 호출 안하면 다음단계 진행이 안된다.
        컨트롤러, 서블릿 둘 다 호출이 안되기 때문이다.

        필터등록은 부트사용하면 FilterRegistrationBean을 사용

        logback mdc로 같은 요청의 로그에 같은식별자 자동으로 남기는 방법존재

    서블릿 필터 - 인증 체크
        인터페이스에서 디폴트는 구현을 안해도 되긴한다.

        화이트리스트는 로그인 안되어 있어도 접근가능하게!
        왜냐면 인터셉터가 모든 url에 대해서 접근권한을 확인하니까

        스프링 시큐리티도 뭐 필터나 이런걸로 결국 다 돌아가는것이다.

    스프링 인터셉터 - 소개
        필터보다 뭐가 강력할까???

